[
    {
        "model": "openai/gpt-4",
        "question": "Create a web-based application using JavaScript, HTML, and CSS that visualizes a 'server'. The application should have the following features: \n\n1. The server should be represented as a 3D object on the screen. \n\n2. The user should be able to rotate the server object in 3D space using mouse drag movements. \n\n3. The user should be able to zoom in and out on the server object using the scroll wheel. \n\n4. When the user clicks on the server object, a popup should appear showing the server's specifications (you can make up these specifications). \n\nNote: You are not allowed to use any external libraries for this task. Only built-in JavaScript, HTML, and CSS functionalities are allowed.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4o",
        "question": "Create an interactive webpage using only JavaScript, HTML, and CSS that visualizes a simple tree structure. The tree should be represented using nested HTML elements. The user should be able to interact with the tree in the following ways: 1) Clicking on a node should expand or collapse its children. 2) There should be a button that, when clicked, adds a new child node to a selected node. Ensure that the tree structure is visually clear and easy to understand.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-32k-0314",
        "question": "Create a simple web application using HTML, CSS, and JavaScript to visualize a 'yard' with a grassy area, a small pond, and a tree. The application should have the following user interactions: 1. The user can click on the tree to change its color, cycling through a predefined set of colors. 2. The user can click on the pond to toggle between day and night mode, changing the background color of the yard accordingly. Ensure that the application is responsive and works well on both desktop and mobile devices.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-turbo",
        "question": "Create a web-based visualization of a crankshaft using only HTML, CSS, and JavaScript. The visualization should be interactive with the following two user interactions: 1) A slider to rotate the crankshaft along its axis, and 2) A button to toggle the visibility of the connecting rods. Ensure the visualization helps users understand the basic mechanics of a crankshaft without using any external libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-turbo",
        "question": "Create a web application using only HTML, CSS, and JavaScript that allows users to visualize a 'chicken wire' mesh. The application should meet the following requirements: 1) Users can adjust the density of the mesh via a slider control. 2) Users can change the color of the chicken wire through a color picker. 3) The application should update the visualization dynamically based on user interactions with the slider and color picker. Ensure that the visualization maintains a clear mental model of a chicken wire mesh structure.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-0314",
        "question": "Create a web application using JavaScript, HTML, and CSS to visualize a surgical knife. The application should have the following 3 user interaction requirements: 1) Users can click on the surgical knife to change its color randomly. 2) Users can hover over the surgical knife to display its name and dimensions. 3) Users can double-click on the surgical knife to rotate it by 90 degrees clockwise. The interactions must require the programmer to have a mental model of the surgical knife being visualized. The application should only use built-in JavaScript libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-0314",
        "question": "Create a simple web application using HTML, CSS, and JavaScript that allows users to visualize a 3D torus. The application should meet the following requirements: 1) The user should be able to rotate the torus using their mouse. 2) The user should be able to change the size of the torus using a slider. 3) The user should be able to change the color of the torus using a color picker. Ensure that the application only uses built-in JavaScript libraries and does not rely on external frameworks or libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-32k",
        "question": "Create a web-based application using JavaScript, HTML, and CSS that visualizes a laparoscope. The application should have the following user interactions: 1) A slider that allows the user to adjust the size of the laparoscope. 2) A color picker that allows the user to change the color of the laparoscope. 3) A dropdown menu that allows the user to select different parts of the laparoscope to view in detail. The application should be interactive and responsive, adjusting to different screen sizes and devices. The final output should not include the objects used in the Previous Coding Question examples.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-1106-preview",
        "question": "Create an interactive web application using JavaScript, HTML, and CSS to visualize a carriage bolt. The visualization should be a simple 2D representation and must include the following interactive features: \n\n1. A slider that allows the user to adjust the size of the carriage bolt, scaling the visualization accordingly. \n2. A color picker that enables the user to change the color of the carriage bolt. \n\nEnsure that the application updates the visualization in real-time as the user interacts with the controls. The visual representation should include the head, shank, and threads of the carriage bolt to give a complete picture. No external libraries are allowed; only use native JavaScript, HTML, and CSS functionalities.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-0314",
        "question": "Create a web application that visualizes an electrograph using HTML, CSS, and JavaScript. The application should have the following 3 user interactions: 1) Users can click on the electrograph to add a new data point. 2) Users can hover over a data point to display its value. 3) Users can double-click on a data point to remove it. The electrograph should update in real-time as users interact with it. Use only built-in JavaScript libraries and ensure that the application works in modern web browsers.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-turbo-preview",
        "question": "Create an interactive web application that visualizes a deckle edge on a piece of paper. The application should allow users to interact with it in the following ways: 1) A slider to adjust the roughness of the deckle edge, changing how jagged or smooth the edge appears. 2. A color picker to change the color of the paper. 3. A dropdown menu to select the paper size (e.g., A4, A5, Letter). 4. A button to toggle a view between a straight edge and a deckle edge. The visualization should be rendered on the web page in real-time based on user interactions. Use only HTML, CSS, and JavaScript with no external libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-turbo-preview",
        "question": "Create a web application using only HTML, CSS, and JavaScript that visualizes a comb. The application should allow users to interact with it in the following ways: 1. Users can change the color of the comb's teeth by selecting a color from a predefined list. 2. Users can adjust the number of teeth the comb has using a slider. 3. Users can toggle the visibility of the comb's handle. 4. Users should be able to reset the comb to its default state with a single button click. Ensure your solution is responsive and works across modern web browsers.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-vision-preview",
        "question": "Create a web application using only HTML, CSS, and JavaScript that allows users to visualize a microwave. The application should meet the following requirements:\n\n1. The user should be able to input the dimensions (width, height, depth) of the microwave, and the visualization should update accordingly.\n2. The user should be able to toggle the microwave door between open and closed states by clicking a button.\n3. The user should be able to start a timer by entering a time in seconds, and the visualization should display a countdown inside the microwave.\n\nEnsure that the visualization maintains a correct aspect ratio for the microwave regardless of the input dimensions. The application should not use any external libraries or frameworks.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4",
        "question": "Create an interactive visualization of a leaf shape using JavaScript, HTML, and CSS. The visualization should meet the following requirements: 1) The user should be able to change the color of the leaf by clicking on it. 2) The user should be able to resize the leaf by dragging its edges. 3) The user should be able to rotate the leaf by dragging it around the center point. The final output should not include the objects used in the Previous Coding Question examples.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-vision-preview",
        "question": "Create a web application using only HTML, CSS, and JavaScript that allows users to visualize an aneroid barometer. The application should meet the following requirements:\n1. Users should be able to input a numerical value representing atmospheric pressure.\n2. The application should display a visual representation of the aneroid barometer that updates based on the input value.\n3. Users should be able to adjust the pressure value using a slider control, which in turn updates the visualization.\n4. The application should include a reset button that returns the visualization to a default state.\nEnsure that the visualization requires the user to have a mental model of an aneroid barometer and how it operates. The use of only built-in JavaScript libraries is permitted.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4",
        "question": "Create an interactive visualization of a 'veranda' using HTML, CSS, and JavaScript. The visualization should include the following features: 1) The user should be able to click on different parts of the veranda to get information about them. 2) The user should be able to change the color of the veranda. 3) The user should be able to add or remove furniture from the veranda. 4) The user should be able to change the view of the veranda (front view, side view, top view). Note: You are only allowed to use built-in JavaScript libraries for this task.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-0314",
        "question": "Create a web application using JavaScript, HTML, and CSS that visualizes a wineglass heel. The application should have the following four user interaction requirements: 1) The user can click on the wineglass heel to change its color randomly. 2) The user can hover over the wineglass heel to display a tooltip with its current dimensions. 3) The user can use a slider to adjust the height of the wineglass heel. 4) The user can use another slider to adjust the width of the wineglass heel. The interactions must require the programmer to have a mental model of the wineglass heel being visualized. The application should be created using only built-in JavaScript libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4",
        "question": "Create an interactive visualization of a violin using HTML, CSS, and JavaScript. The visualization should meet the following requirements: 1) The violin should be clickable. When clicked, it should play a sound. 2) The violin should change color when the mouse hovers over it. 3) The user should be able to adjust the size of the violin using a slider. 4) The user should be able to rotate the violin by dragging it. Note: You are only allowed to use built-in JavaScript libraries for this task.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-turbo",
        "question": "Create a simple interactive web application using HTML, CSS, and JavaScript to visualize a railway station. The application should meet the following requirements: 1. Allow the user to select from three different railway station designs (Modern, Classic, Futuristic) using dropdown menus. 2. Based on the selected design, display a corresponding railway station image and a brief description below the image. 3. Provide buttons to zoom in and zoom out on the railway station image. Ensure that the application is fully functional using only built-in JavaScript libraries, without any external frameworks or libraries.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-1106-preview",
        "question": "Create an interactive visualization of a gas furnace using HTML, CSS, and JavaScript. Your program should meet the following requirements:\n\n1. The user should be able to toggle the visualization between 'on' and 'off' states by clicking a button. The 'on' state should show flames inside the furnace, while the 'off' state should not.\n\n2. The user should be able to adjust the intensity of the flames using a slider. This should visually affect the size or color of the flames within the furnace.\n\n3. The user should be able to hover over different parts of the furnace to display tooltips that explain the function of each part.\n\nYour visualization should be purely in 2D and must not use any external libraries or frameworks. Creativity in the design and interactivity will be considered a plus. The visualization should be rendered within the browser and should be responsive to different screen sizes.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    },
    {
        "model": "openai/gpt-4-vision-preview",
        "question": "Create a web application using only HTML, CSS, and JavaScript that visualizes a tensiometer's data. The tensiometer measures soil water tension, which is an indicator of the force that plant roots need to apply to extract water from the soil. The visualization should be in the form of a dynamic line chart that updates in real-time as new data is received.\n\nRequirements:\n1. The application must allow the user to start and stop the data stream for the tensiometer visualization.\n2. The user should be able to adjust the range of tension values displayed on the chart (e.g., 0-100 kPa, 0-200 kPa, etc.).\n\nNote: Use only built-in JavaScript libraries for this task. The mental model of the tensiometer and its readings should be clear from the visualization. Ensure that the user interactions are not based on keystrokes but on UI elements such as buttons and sliders.\nNote:\n- The visualization should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n"
    }
]